[1mdiff --git a/date.txt b/date.txt[m
[1mindex e69de29..a94361e 100644[m
[1m--- a/date.txt[m
[1m+++ b/date.txt[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m2[m
[32m+[m[32m3[m
[32m+[m[32mKeseru ATT 35 24 41 70 900000[m
[32m+[m[32mCristea MID 27 68 32 29 1100000[m
[32m+[m[32mPopescu DEF 19 22 71 62 2300000[m
[32m+[m[32m2[m
[32m+[m[32mIvan ATT 25 23 58 68 1200000[m
[32m+[m[32mBancu DEF 71 57 43 1050000[m
\ No newline at end of file[m
[1mdiff --git a/main.cpp b/main.cpp[m
[1mindex 8b6a1d7..197b138 100644[m
[1m--- a/main.cpp[m
[1m+++ b/main.cpp[m
[36m@@ -1,6 +1,92 @@[m
 #include <iostream>[m
[32m+[m[32m#include <fstream>[m
[32m+[m[32m#include <vector>[m
[32m+[m
[32m+[m[32mstd::ifstream fin ("date.txt");[m
[32m+[m
[32m+[m[32mclass Team;[m
[32m+[m
[32m+[m[32mclass Player{[m
[32m+[m[32m    std::string name;[m
[32m+[m[32m    std::string position;[m
[32m+[m[32m    int age;[m
[32m+[m[32m    int defRating;[m
[32m+[m[32m    int midRating;[m
[32m+[m[32m    int attRating;[m
[32m+[m[32m    int value;[m
[32m+[m[32m    //Team team;[m
[32m+[m[32mpublic:[m
[32m+[m[32m    ///constructor de initializare -->[m
[32m+[m[32m    Player(const std::string &name, const std::string &position, int age, int defRating, int midRating, int attRating,[m
[32m+[m[32m           int value/*, const Team &team*/) : name(name), position(position), age(age), defRating(defRating),[m
[32m+[m[32m                                          midRating(midRating), attRating(attRating), value(value)/*, team(team)*/ {}[m
[32m+[m[32m    ///constructor de copiere -->[m
[32m+[m[32m    Player(const Player& other) : name(other.name), position(other.position), age(other.age), defRating(other.defRating),[m
[32m+[m[32m                                midRating(other.midRating), attRating(other.attRating), value(other.value)/*,[m
[32m+[m[32m                                team(other.team)*/ {}[m
[32m+[m[32m    ///operatorul= -->[m
[32m+[m[32m    Player& operator=(const Player& other){[m
[32m+[m[32m        name = other.name;[m
[32m+[m[32m        position = other.position;[m
[32m+[m[32m        age = other.age;[m
[32m+[m[32m        defRating = other.defRating;[m
[32m+[m[32m        midRating = other.midRating;[m
[32m+[m[32m        attRating = other.attRating;[m
[32m+[m[32m        value = other.value;[m
[32m+[m[32m        //team = other.team;[m
[32m+[m[32m        return *this;[m
[32m+[m[32m    }[m
[32m+[m[32m    ///operatorul<< -->[m
[32m+[m[32m    friend std::ostream& operator<<(std::ostream& os, const Player& x){[m
[32m+[m[32m        os << "Nume: " << x.name << "\nVarsta: " << x.age << "\nPozitie: " << x.position << "\nDefensive rating: " << x.defRating << "\nMidfield Rating: " << x.midRating << "\nAttack Rating: " << x.attRating << "\nValoare: " << x.value <</* "\nEchipa: " << x.team <<*/ '\n';[m
[32m+[m[32m        return os;[m
[32m+[m[32m    }[m
[32m+[m[32m    ~Player() {}[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mclass Team{[m
[32m+[m[32m    std::string name;[m
[32m+[m[32m    std::vector<Player> players;[m
[32m+[m[32mpublic:[m
[32m+[m[32m    Team(const std::string &name, const std::vector<Player> &players) : name(name), players(players) {}[m
[32m+[m
[32m+[m[32m    Team(const Team& other) : name(other.name), players(other.players) {}[m
[32m+[m[32m    Team& operator=(const Team& other){[m
[32m+[m[32m        name = other.name;[m
[32m+[m[32m        players = other.players;[m
[32m+[m[32m        return *this;[m
[32m+[m[32m    }[m
[32m+[m[32m    friend std::ostream& operator<<(std::ostream& os, const Team& x){[m
[32m+[m[32m        os << "Nume echipa: " << x.name << "\nJucatori:\n";[m
[32m+[m[32m        for (auto i : x.players)[m
[32m+[m[32m            os << i << ' ';[m
[32m+[m[32m        os << '\n';[m
[32m+[m[32m        return os;[m
[32m+[m[32m    }[m
[32m+[m[32m    ~Team() {}[m
[32m+[m[32m};[m
 [m
 int main() {[m
[31m-    std::cout << "Hello, world!\n";[m
[32m+[m[32m    int noOfTeams, noOfPlayers, playerAge, playerDefRating, playerMidRating, playerAttRating, playerValue;[m
[32m+[m[32m    std::string playerName, playerPosition;[m
[32m+[m[32m    std::vector<Player>p;[m
[32m+[m[32m    fin >> noOfTeams;[m
[32m+[m[32m    ///std::cout << noOfTeams; NU MERGE CITIREA DIN FISIER[m
[32m+[m[32m    for (int i=0; i<noOfTeams; i++){[m
[32m+[m[32m        fin >> noOfPlayers;[m
[32m+[m[32m        for (int j=0; j<noOfPlayers; j++){[m
[32m+[m[32m            fin >> playerName >> playerPosition >> playerAge >> playerDefRating >> playerMidRating >> playerAttRating >> playerValue;[m
[32m+[m[32m            p.push_back(Player{playerName, playerPosition, playerAge, playerDefRating, playerMidRating, playerAttRating, playerValue});[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    for (auto i : p){[m
[32m+[m[32m        std::cout << i << '\n';[m
[32m+[m[32m    }[m
     return 0;[m
 }[m
[32m+[m[32m/*[m
[32m+[m[32m * version x.y.z:[m
[32m+[m[32m * x = major changes[m
[32m+[m[32m * y = minor changes[m
[32m+[m[32m * z = bug fixes[m
[32m+[m[32m */[m
\ No newline at end of file[m
